/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables;


import gov.nist.csrk.jooq.DefaultSchema;
import gov.nist.csrk.jooq.Keys;
import gov.nist.csrk.jooq.tables.records.BaselinesecuritymappingsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Baselinesecuritymappings extends TableImpl<BaselinesecuritymappingsRecord> {

    private static final long serialVersionUID = 1934699060;

    /**
     * The reference instance of <code>BaselineSecurityMappings</code>
     */
    public static final Baselinesecuritymappings BASELINESECURITYMAPPINGS = new Baselinesecuritymappings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BaselinesecuritymappingsRecord> getRecordType() {
        return BaselinesecuritymappingsRecord.class;
    }

    /**
     * The column <code>BaselineSecurityMappings.Id</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>BaselineSecurityMappings.Level</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Integer> LEVEL = createField("Level", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BaselineSecurityMappings.BaselineAuthor</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Integer> BASELINEAUTHOR = createField("BaselineAuthor", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BaselineSecurityMappings.IsControlMap</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Boolean> ISCONTROLMAP = createField("IsControlMap", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>BaselineSecurityMappings.SpecsId</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Integer> SPECSID = createField("SpecsId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>BaselineSecurityMappings.ControlsId</code>.
     */
    public final TableField<BaselinesecuritymappingsRecord, Integer> CONTROLSID = createField("ControlsId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>BaselineSecurityMappings</code> table reference
     */
    public Baselinesecuritymappings() {
        this(DSL.name("BaselineSecurityMappings"), null);
    }

    /**
     * Create an aliased <code>BaselineSecurityMappings</code> table reference
     */
    public Baselinesecuritymappings(String alias) {
        this(DSL.name(alias), BASELINESECURITYMAPPINGS);
    }

    /**
     * Create an aliased <code>BaselineSecurityMappings</code> table reference
     */
    public Baselinesecuritymappings(Name alias) {
        this(alias, BASELINESECURITYMAPPINGS);
    }

    private Baselinesecuritymappings(Name alias, Table<BaselinesecuritymappingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Baselinesecuritymappings(Name alias, Table<BaselinesecuritymappingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BaselinesecuritymappingsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BASELINESECURITYMAPPINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BaselinesecuritymappingsRecord> getPrimaryKey() {
        return Keys.PK_BASELINESECURITYMAPPINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BaselinesecuritymappingsRecord>> getKeys() {
        return Arrays.<UniqueKey<BaselinesecuritymappingsRecord>>asList(Keys.PK_BASELINESECURITYMAPPINGS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<BaselinesecuritymappingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<BaselinesecuritymappingsRecord, ?>>asList(Keys.FK_BASELINESECURITYMAPPINGS_SPECS_1, Keys.FK_BASELINESECURITYMAPPINGS_CONTROLS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Baselinesecuritymappings as(String alias) {
        return new Baselinesecuritymappings(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Baselinesecuritymappings as(Name alias) {
        return new Baselinesecuritymappings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Baselinesecuritymappings rename(String name) {
        return new Baselinesecuritymappings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Baselinesecuritymappings rename(Name name) {
        return new Baselinesecuritymappings(name, null);
    }
}
