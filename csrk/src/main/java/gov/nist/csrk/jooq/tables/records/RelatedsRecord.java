/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables.records;


import gov.nist.csrk.jooq.tables.Relateds;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelatedsRecord extends UpdatableRecordImpl<RelatedsRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1437888508;

    /**
     * Setter for <code>Relateds.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Relateds.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Relateds.ParentId</code>.
     */
    public void setParentid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>Relateds.ParentId</code>.
     */
    public Integer getParentid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>Relateds.ChildID</code>.
     */
    public void setChildid(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>Relateds.ChildID</code>.
     */
    public Integer getChildid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Relateds.RELATEDS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Relateds.RELATEDS.PARENTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Relateds.RELATEDS.CHILDID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getParentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getChildid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getParentid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getChildid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedsRecord value2(Integer value) {
        setParentid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedsRecord value3(Integer value) {
        setChildid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RelatedsRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RelatedsRecord
     */
    public RelatedsRecord() {
        super(Relateds.RELATEDS);
    }

    /**
     * Create a detached, initialised RelatedsRecord
     */
    public RelatedsRecord(Integer id, Integer parentid, Integer childid) {
        super(Relateds.RELATEDS);

        set(0, id);
        set(1, parentid);
        set(2, childid);
    }
}
