/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables.daos;


import gov.nist.csrk.jooq.tables.Relateds;
import gov.nist.csrk.jooq.tables.records.RelatedsRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RelatedsDao extends DAOImpl<RelatedsRecord, gov.nist.csrk.jooq.tables.pojos.Relateds, Integer> {

    /**
     * Create a new RelatedsDao without any configuration
     */
    public RelatedsDao() {
        super(Relateds.RELATEDS, gov.nist.csrk.jooq.tables.pojos.Relateds.class);
    }

    /**
     * Create a new RelatedsDao with an attached configuration
     */
    public RelatedsDao(Configuration configuration) {
        super(Relateds.RELATEDS, gov.nist.csrk.jooq.tables.pojos.Relateds.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(gov.nist.csrk.jooq.tables.pojos.Relateds object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>Id IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Relateds> fetchById(Integer... values) {
        return fetch(Relateds.RELATEDS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>Id = value</code>
     */
    public gov.nist.csrk.jooq.tables.pojos.Relateds fetchOneById(Integer value) {
        return fetchOne(Relateds.RELATEDS.ID, value);
    }

    /**
     * Fetch records that have <code>ParentId IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Relateds> fetchByParentid(Integer... values) {
        return fetch(Relateds.RELATEDS.PARENTID, values);
    }

    /**
     * Fetch records that have <code>ChildID IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Relateds> fetchByChildid(Integer... values) {
        return fetch(Relateds.RELATEDS.CHILDID, values);
    }
}
