/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables;


import gov.nist.csrk.jooq.DefaultSchema;
import gov.nist.csrk.jooq.Keys;
import gov.nist.csrk.jooq.tables.records.BaselinesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Baselines extends TableImpl<BaselinesRecord> {

    private static final long serialVersionUID = -629766742;

    /**
     * The reference instance of <code>Baselines</code>
     */
    public static final Baselines BASELINES = new Baselines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BaselinesRecord> getRecordType() {
        return BaselinesRecord.class;
    }

    /**
     * The column <code>Baselines.Id</code>.
     */
    public final TableField<BaselinesRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>Baselines.ImpactLow</code>.
     */
    public final TableField<BaselinesRecord, Boolean> IMPACTLOW = createField("ImpactLow", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>Baselines.ImpactModerate</code>.
     */
    public final TableField<BaselinesRecord, Boolean> IMPACTMODERATE = createField("ImpactModerate", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>Baselines.ImpactHigh</code>.
     */
    public final TableField<BaselinesRecord, Boolean> IMPACTHIGH = createField("ImpactHigh", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>Baselines.Description</code>.
     */
    public final TableField<BaselinesRecord, String> DESCRIPTION = createField("Description", org.jooq.impl.SQLDataType.CHAR(8000).nullable(false), this, "");

    /**
     * Create a <code>Baselines</code> table reference
     */
    public Baselines() {
        this(DSL.name("Baselines"), null);
    }

    /**
     * Create an aliased <code>Baselines</code> table reference
     */
    public Baselines(String alias) {
        this(DSL.name(alias), BASELINES);
    }

    /**
     * Create an aliased <code>Baselines</code> table reference
     */
    public Baselines(Name alias) {
        this(alias, BASELINES);
    }

    private Baselines(Name alias, Table<BaselinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Baselines(Name alias, Table<BaselinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BaselinesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BASELINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BaselinesRecord> getPrimaryKey() {
        return Keys.PK_BASELINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BaselinesRecord>> getKeys() {
        return Arrays.<UniqueKey<BaselinesRecord>>asList(Keys.PK_BASELINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Baselines as(String alias) {
        return new Baselines(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Baselines as(Name alias) {
        return new Baselines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Baselines rename(String name) {
        return new Baselines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Baselines rename(Name name) {
        return new Baselines(name, null);
    }
}
