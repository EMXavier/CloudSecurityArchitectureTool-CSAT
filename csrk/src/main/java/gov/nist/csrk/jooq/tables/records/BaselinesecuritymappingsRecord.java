/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables.records;


import gov.nist.csrk.jooq.tables.Baselinesecuritymappings;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BaselinesecuritymappingsRecord extends UpdatableRecordImpl<BaselinesecuritymappingsRecord> implements Record6<Integer, Integer, Integer, Boolean, Integer, Integer> {

    private static final long serialVersionUID = -1973491661;

    /**
     * Setter for <code>BaselineSecurityMappings.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>BaselineSecurityMappings.Level</code>.
     */
    public void setLevel(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.Level</code>.
     */
    public Integer getLevel() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>BaselineSecurityMappings.BaselineAuthor</code>.
     */
    public void setBaselineauthor(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.BaselineAuthor</code>.
     */
    public Integer getBaselineauthor() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>BaselineSecurityMappings.IsControlMap</code>.
     */
    public void setIscontrolmap(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.IsControlMap</code>.
     */
    public Boolean getIscontrolmap() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>BaselineSecurityMappings.SpecsId</code>.
     */
    public void setSpecsid(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.SpecsId</code>.
     */
    public Integer getSpecsid() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>BaselineSecurityMappings.ControlsId</code>.
     */
    public void setControlsid(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>BaselineSecurityMappings.ControlsId</code>.
     */
    public Integer getControlsid() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Boolean, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Boolean, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.BASELINEAUTHOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.ISCONTROLMAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.SPECSID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Baselinesecuritymappings.BASELINESECURITYMAPPINGS.CONTROLSID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getBaselineauthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component4() {
        return getIscontrolmap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getSpecsid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getControlsid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBaselineauthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getIscontrolmap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSpecsid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getControlsid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value2(Integer value) {
        setLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value3(Integer value) {
        setBaselineauthor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value4(Boolean value) {
        setIscontrolmap(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value5(Integer value) {
        setSpecsid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord value6(Integer value) {
        setControlsid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BaselinesecuritymappingsRecord values(Integer value1, Integer value2, Integer value3, Boolean value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BaselinesecuritymappingsRecord
     */
    public BaselinesecuritymappingsRecord() {
        super(Baselinesecuritymappings.BASELINESECURITYMAPPINGS);
    }

    /**
     * Create a detached, initialised BaselinesecuritymappingsRecord
     */
    public BaselinesecuritymappingsRecord(Integer id, Integer level, Integer baselineauthor, Boolean iscontrolmap, Integer specsid, Integer controlsid) {
        super(Baselinesecuritymappings.BASELINESECURITYMAPPINGS);

        set(0, id);
        set(1, level);
        set(2, baselineauthor);
        set(3, iscontrolmap);
        set(4, specsid);
        set(5, controlsid);
    }
}
