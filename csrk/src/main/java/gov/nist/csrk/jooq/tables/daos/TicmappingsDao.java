/*
 * This file is generated by jOOQ.
*/
package gov.nist.csrk.jooq.tables.daos;


import gov.nist.csrk.jooq.tables.Ticmappings;
import gov.nist.csrk.jooq.tables.records.TicmappingsRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicmappingsDao extends DAOImpl<TicmappingsRecord, gov.nist.csrk.jooq.tables.pojos.Ticmappings, Integer> {

    /**
     * Create a new TicmappingsDao without any configuration
     */
    public TicmappingsDao() {
        super(Ticmappings.TICMAPPINGS, gov.nist.csrk.jooq.tables.pojos.Ticmappings.class);
    }

    /**
     * Create a new TicmappingsDao with an attached configuration
     */
    public TicmappingsDao(Configuration configuration) {
        super(Ticmappings.TICMAPPINGS, gov.nist.csrk.jooq.tables.pojos.Ticmappings.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(gov.nist.csrk.jooq.tables.pojos.Ticmappings object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>Id IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Ticmappings> fetchById(Integer... values) {
        return fetch(Ticmappings.TICMAPPINGS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>Id = value</code>
     */
    public gov.nist.csrk.jooq.tables.pojos.Ticmappings fetchOneById(Integer value) {
        return fetchOne(Ticmappings.TICMAPPINGS.ID, value);
    }

    /**
     * Fetch records that have <code>CapabilityId IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Ticmappings> fetchByCapabilityid(Integer... values) {
        return fetch(Ticmappings.TICMAPPINGS.CAPABILITYID, values);
    }

    /**
     * Fetch records that have <code>TICName IN (values)</code>
     */
    public List<gov.nist.csrk.jooq.tables.pojos.Ticmappings> fetchByTicname(String... values) {
        return fetch(Ticmappings.TICMAPPINGS.TICNAME, values);
    }
}
